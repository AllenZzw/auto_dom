\section{Introduction}

MiniZinc is a language designed for specifying constrained optimization and
decision problems over integers and real numbers.  A MiniZinc model does not
dictate how to solve the problem although the model can contain annotations
which are used to guide the underlying solver.

MiniZinc is designed to interface easily to different backend solvers.  It
does this by transforming an input MiniZinc model and data file into a 
FlatZinc model. FlatZinc models consist of variable declaration
and constraint definitions as well as a definition of the objective function
if the problem is an optimization problem. 
The translation from MiniZinc to FlatZinc is specializable to individual
backend solvers, so they can control what form constraints end up in.
In particular, MiniZinc allows the specification of global constraints by
decomposition.  


